@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@inject UserManager<AspNetUser> userManager
@inject SignInManager<AspNetUser> SignInManager

@model PriorityApp.Service.Models.GeoFilterModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/NiceAdmin/_CSLayout.cshtml";
    int holdReminingQuantity = 0;
    var user = await userManager.GetUserAsync(User);
    var displayName = user.UserName;
    var roles = await userManager.GetRolesAsync(user);
    var tempModel = Model;
}
@if (ViewBag.Message != null)
{
    <div style="background-color: #00e600; height: 60px; box-shadow: 5px; margin: 0px 20px 20px 50px; text-align:center; font-size:x-large">@ViewBag.Message</div> }
else if (ViewBag.Error != null)
{

    <div style="background-color: #ff3333; height: 60px; box-shadow: 5px; margin: 0px 20px 20px 50px; text-align: center; font-size: x-large">@ViewBag.Error</div>///////////////////////////////*@ <!--<div class="modal">--> <!-- Modal content -->

}
<style>
    #NOOrdersSpain {
        margin: auto;
    }


    table {
        border-collapse: collapse;
        border-spacing: 0;
        border: 5px solid #ddd;
        width: 100%;
    }

    th, td {
        text-align: center;
        padding: 8px;
        margin: 0px 10px 10px 10px;
    }

    tr:nth-child(even) {
        background-color: #f2f2f2
    }

    .qty {
        margin-right: 40px;
        margin-top: 0px;
    }
</style>

<script src="~/DataTable/jquery-3.5.1.js"></script>
<script src="~/DataTable/jquery.dataTables.min.js"></script>
<link rel="stylesheet" href="~/DataTable/jquery.dataTables.min.css">

@*<script>
        $(document).ready(function () {
            $('#example').DataTable();
        });
    </script>*@
<script type="text/javascript">
    $(document).ready(function () {
        $('#SubRegionSelectedId').change(function () {
            var ddlsource = "#SubRegionSelectedId";
            var items = '';
            var url = '@Url.Content("~/")' + "PriorityTool/CSDeliveryOrder/StateFilter2";
                $.getJSON(url, { id: $(ddlsource).val() }, function (data) {
                    $('#StateSelectedId').empty();
                    $.each(data, function (i, state) {
                        items += "<option value='" + state.value + "'>" + state.text + "</option>";
                    });
                    $('#StateSelectedId').html(items);
                });
            //}
            //else {
            //    $('#StateSelectedId').html(items);
            //}
        });


        $('#StateSelectedId').change(function () {
            var ddlsource = "#StateSelectedId";

            var items = '';
            if ($(ddlsource).val() != -1) {
                var url = '@Url.Content("~/")' + "PriorityTool/CSDeliveryOrder/TerritoryFilter";
                $.getJSON(url, { id: $(ddlsource).val() }, function (data) {
                    $('#TerritorySelectedId').empty();
                    $.each(data, function (i, territory) {
                        items += "<option value='" + territory.value + "'>" + territory.text + "</option>";
                    });
                    $('#TerritorySelectedId').html(items);
                });
            }
            else {
                $('#TerritorySelectedId').html(items);

            }

        });

        $('#TerritorySelectedId').change(function () {

            var ddlsource = "#TerritorySelectedId";
            var items = '';

            if ($(ddlsource).val() != -1) {
                var url = '@Url.Content("~/")' + "PriorityTool/CSDeliveryOrder/ZoneFilter";
                $.getJSON(url, { id: $(ddlsource).val() }, function (data) {
                    $('#ZoneSelectedId').empty();
                    $.each(data, function (i, zone) {
                        items += "<option value='" + zone.value + "'>" + zone.text + "</option>";
                    });
                    $('#ZoneSelectedId').html(items);
                });
            }
            else {
                $('#ZoneSelectedId').html(items);

            }


        });
    });


   
    
</script>

<script>
    function toFromDateCompare() {
        var from = document.getElementById("SelectedPriorityDate").value;
        var to = document.getElementById("ToSelectedPriorityDate").value;
        if (to < from) {
            alert("To date must be greater than or equal From date");
            document.getElementById("ToSelectedPriorityDate").value = document.getElementById("SelectedPriorityDate").value;
        }
    }

    function sorting(thIndex) {
        var ths = document.getElementsByTagName("th");
        var test = ths[thIndex];
        var table = $(test).parents('table').eq(0)
        var rows = table.find('tr:gt(0)').toArray().sort(comparer($(test).index()))
        test.asc = !test.asc
        if (!test.asc) { rows = rows.reverse() }
        for (var i = 0; i < rows.length; i++) { table.append(rows[i]) }
    }
    function comparer(index) {
        return function (a, b) {
            var valA = getCellValue(a, index), valB = getCellValue(b, index)
            return $.isNumeric(valA) && $.isNumeric(valB) ? valA - valB : valA.toString().localeCompare(valB)
        }
    }
    function getCellValue(row, index) { return $(row).children('td').eq(index).text() }
</script>

<script>
    $(document).ready(function () {
        var table = $('#example').DataTable({
            "ordering": false,
            "paging": false,
        });
    });

</script>
<style>

    table {
        margin-bottom: 20px;
    }

    .selectFilter {
        margin-left: 40px;
    }

    .searchbtn {
        margin: 20px 20px 20px 40px;
        border-radius: 10px;
        width: 200px;
    }
</style>

<form asp-controller="CSDeliveryOrder" asp-action="ShowSubmittedOrders" method="post" class="form-horizontal" role="form">
    <div class="alert-danger" asp-validation-summary="ModelOnly"></div>
    <div class="form-group">
        <div class="form-row">
            <div class="col-xs-15 col-sm-6 col-md-6 col-lg-6 selectFilter" style="display:inline-block">
                <label class="control-label" style="display:block">Priority Date</label>
                <label class="control-label" style="margin-right:10px">From</label><input type="date" id="SelectedPriorityDate" asp-for="SelectedPriorityDate" onchange="toFromDateCompare()" />
                <label class="control-label" style="margin-left:40px; margin-right:10px">To</label><input type="date" id="ToSelectedPriorityDate" asp-for="ToSelectedPriorityDate" onchange="toFromDateCompare()" />
                <input type="hidden" asp-for="orderType" value=1 />
            </div>

            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-4 selectFilter" style="display:inline-block">
                <label class="control-label">Products</label>
                <select id="ItemSelectedId" name="ItemSelectedId" asp-for="ItemSelectedId"
                        class="form-select form-select-lg mb-3"
                        asp-items="@(new SelectList(Model.Items, "Id", "Name"))"></select>
            </div>
        </div>
        <div class="form-row" style="width:100%">
            @if (!roles.Contains("Sales"))
            {
                @if (Model.SubRegions == null)
                {
                    <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
                        <label class="control-label">Region</label>
                        <select id="SubRegionSelectedId" name="SubRegionSelectedId" asp-for="SubRegionSelectedId"
                                class="form-select form-select-lg mb-3"
                                asp-items="@(new SelectList(string.Empty, "Id", "Name"))"></select>
                    </div>
                }
                else
                {
                    <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
                        <label class="control-label">Region</label>
                        <select id="SubRegionSelectedId" name="SubRegionSelectedId" asp-for="SubRegionSelectedId"
                                class="form-select form-select-lg mb-3"
                                asp-items="@(new SelectList(Model.SubRegions, "Id", "Name"))"></select>
                    </div>
                }
                @if (Model.States == null)
                {
                    <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
                        <label class="control-label">State</label>
                        <select id="StateSelectedId" name="StateSelectedId" asp-for="StateSelectedId"
                                class="form-select form-select-lg mb-3"
                                asp-items="@(new SelectList(string.Empty, "Id", "Name"))"></select>
                    </div>
                }
                else
                {
                    <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
                        <label class="control-label">State</label>
                        <select id="StateSelectedId" name="StateSelectedId" asp-for="StateSelectedId"
                                class="form-select form-select-lg mb-3"
                                asp-items="@(new SelectList(Model.States, "Id", "Name"))"></select>
                    </div>
                }

                @if (Model.Territories == null)
                {
                    <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
                        <label class="control-label">Territory</label>

                        <select id="TerritorySelectedId" name="TerritorySelectedId" asp-for="TerritorySelectedId"
                                class="form-select form-select-lg mb-3"
                                asp-items="@(new SelectList(string.Empty, "Id", "Name"))"></select>
                    </div>
                }
                else
                {
                    <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
                        <label class="control-label">Territory</label>

                        <select id="TerritorySelectedId" name="TerritorySelectedId" asp-for="TerritorySelectedId"
                                class="form-select form-select-lg mb-3"
                                asp-items="@(new SelectList(Model.Territories, "Id", "Name"))"></select>
                    </div>
                }
            }
            @*@if (Model.Zones == null)
                {
                    <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
                        <label class="control-label">Zone</label>
                        <select id="ZoneSelectedId" name="ZoneSelectedId" asp-for="ZoneSelectedId"
                                class="form-select form-select-lg mb-3"
                                asp-items="@(new SelectList(string.Empty, "Id", "Name"))"></select>
                    </div>
                }
                else
                {
                    <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
                        <label class="control-label">Zone</label>
                        <select id="ZoneSelectedId" name="ZoneSelectedId" asp-for="ZoneSelectedId"
                                class="form-select form-select-lg mb-3"
                                asp-items="@(new SelectList(Model.Zones, "Id", "Name"))"></select>
                    </div>
                }*@
            <input type="submit" value="Search" class="btn btn-primary btn-lg searchbtn" />

        </div>


    </div>
    @if (Model.FilterColoumns == null)
    {
        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
            <label class="control-label">Sort by</label>
            <select multiple id="sortingDD" name="sortingDD"
                    class="form-select form-select-lg mb-3"
                    asp-items="@(new SelectList(string.Empty, "ID", "Name","Type"))"></select>
        </div>
    }
    else
    {
        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
            <label class="control-label">Sort by</label>
            <select multiple id="sortingDD" name="sortingDD"
                    class="form-select form-select-lg mb-3"
                    asp-items="@(new SelectList(Model.FilterColoumns, "ID", "Name", "Type"))" onclick="sorting(this.value)"></select>
        </div>
    }
</form>

<form asp-action="SaveOrders" class="CreateForm" asp-controller="CSDeliveryOrder" method="post">
    <table id="example" class="display table table-striped" style="text-align: center; width:100%">
        <thead class="table-dark">
            <tr>
                <th scope="col"> Customer Name</th>
                <th>Order Number</th>
                <th>line</th>
                <th> Item </th>
                <th> POD Number</th>
                <th> POD Name</th>
                <th> POD Address</th>
                <th> POD Zone</th>
                <th> POD  State</th>
                <th>Qty</th>
                <th> Priority</th>
                <th>Truck</th>
                <th>Status</th>
                <th>Comment</th>
                @*<th>Cancel </th>*@
                <th  class="skip-filter">Unlock </th>


            </tr>
        </thead>
        <tbody>
            @if (Model.OrderModel != null)
            {
                @for (int index = 0; index < Model.OrderModel.orders.Count; index++)
                {
                    string diapatchedCheckListId = "DisList" + index;
                    string UnlockId = "UnlockId" + index;
                    string podDetailsId = "POD" + index;


                    <tr>


                        <td>
                            @Html.DisplayFor(model => model.OrderModel.orders[index].Customer.CustomerName)
                            <input class="form-check-input" asp-for="OrderModel.orders[index].CustomerId" type="hidden" />
                            <input class="form-check-input" asp-for="OrderModel.orders[index].Id" type="hidden" />
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.OrderModel.orders[index].OrderNumber)
                            <input class="form-check-input" asp-for="OrderModel.orders[index].OrderNumber" type="hidden" />
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.OrderModel.orders[index].LineID)
                            <input class="form-check-input" asp-for="OrderModel.orders[index].LineID" type="hidden" />
                        </td>

                        <td>
                            @Html.DisplayFor(model => model.OrderModel.orders[index].Item.Name)
                            <input class="form-check-input" asp-for="OrderModel.orders[index].Item.Name" type="hidden" />
                        </td>

                        <td>
                            @Html.DisplayFor(model => model.OrderModel.orders[index].PODNumber)
                            <input class="form-check-input" asp-for="OrderModel.orders[index].PODNumber" type="hidden" />

                        </td>
                        <td>
                            @Html.DisplayFor(model => model.OrderModel.orders[index].PODName)
                            <input class="form-check-input" asp-for="OrderModel.orders[index].PODName" type="hidden" />

                        </td>
                        <td>
                            @Html.DisplayFor(model => model.OrderModel.orders[index].PODZoneAddress)
                            <input class="form-check-input" asp-for="OrderModel.orders[index].PODZoneAddress" type="hidden" />

                        </td>
                        <td>
                            @Html.DisplayFor(model => model.OrderModel.orders[index].PODZoneName)
                            <input class="form-check-input" asp-for="OrderModel.orders[index].PODZoneName" type="hidden" />
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.OrderModel.orders[index].PODZoneState)
                            <input class="form-check-input" asp-for="OrderModel.orders[index].PODZoneState" type="hidden" />
                        </td>

                        <td>
                            @Html.DisplayFor(model => model.OrderModel.orders[index].PriorityQuantity)
                            <input class="form-check-input" asp-for="OrderModel.orders[index].PriorityQuantity" type="hidden" />
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.OrderModel.orders[index].Priority.Name)
                            <input class="form-check-input" asp-for="OrderModel.orders[index].Priority.Name" type="hidden" />
                        </td>

                        <td>
                            @Html.DisplayFor(model => model.OrderModel.orders[index].Truck)
                            <input class="form-check-input" asp-for="OrderModel.orders[index].Truck" type="hidden" />
                        </td>

                        <td>
                            @Html.DisplayFor(model => model.OrderModel.orders[index].Status)
                            <input class="form-check-input" asp-for="OrderModel.orders[index].Status" type="hidden" />
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.OrderModel.orders[index].Comment)
                            <input class="form-check-input" asp-for="OrderModel.orders[index].Comment" type="hidden" />
                        </td>

                        @if ((Model.OrderModel.orders[index].Submitted == true) && (Model.OrderModel.orders[index].Dispatched == false) && (Model.OrderModel.orders[index].Status != "Cancelled"))
                        {

                            @*<td>
                                <a class="btn btn-danger" asp-action="OrderCancel" asp-route-id="@Model.OrderModel.orders[index].Id" style="margin-left:20px">Cancel</a>
                            </td>*@
                            <td  class="skip-filter">
                                <a class="far fa-edit btn btn-info" value="@Model.OrderModel.orders[index].Id" id=@UnlockId asp-action="UnLockOrder" asp-route-id="@Model.OrderModel.orders[index].Id">Unlock</a>
                            </td>
                        }


                        else
                        {

                            @*<td>
                                <a class="btn btn-danger disabled" asp-action="" asp-route-id="@Model.OrderModel.orders[index].Id" style="margin-left:20px">Cancel</a>
                            </td>*@
                            <td  class="skip-filter">
                                <a class="far fa-edit btn btn-info disabled" value="@Model.OrderModel.orders[index].Id" id=@UnlockId asp-action="UnLockOrder" asp-route-id="@Model.OrderModel.orders[index].Id">Unlock</a>
                            </td>
                        }
                        @*@if ((Model.OrderModel.orders[index].Submitted == true) && (Model.OrderModel.orders[index].Dispatched == false))
                            {

                                <td>
                                    <a class="far fa-edit btn btn-info" value="@Model.OrderModel.orders[index].Id" id=@UnlockId asp-action="UnLockOrder" asp-route-id="@Model.OrderModel.orders[index].Id">Unlock</a>
                                </td>
                            }
                            else
                            {

                                <td>
                                    <a class="far fa-edit btn btn-info disabled" value="@Model.OrderModel.orders[index].Id" id=@UnlockId asp-action="UnLockOrder" asp-route-id="@Model.OrderModel.orders[index].Id">Unlock</a>
                                </td>
                            }*@

                    </tr>
                    <input class="form-check-input" asp-for="@Model.SubRegionSelectedId" type="hidden" />

                    <input class="form-check-input" asp-for="@Model.StateSelectedId" type="hidden" />
                    <input class="form-check-input" asp-for="@Model.TerritorySelectedId" type="hidden" />
                    <input class="form-check-input" asp-for="@Model.ZoneSelectedId" type="hidden" />
                    <input class="form-check-input" asp-for="@Model.SelectedPriorityDate" type="hidden" />
                    <input class="form-check-input" asp-for="@Model.ItemSelectedId" type="hidden" />
                }
            }
            @if (Model.HoldModel != null)
            {
                <div>
                    <span> Summation</span>
                    <input id="ordersQuantitySum" type="number" value="@Model.ordersQuantitySum" disabled style="margin:10px 20px 20px 0; width:90px" />
                    <span>Territory Qouta</span>
                    <input id="remaining" type="number" disabled value="@Model.HoldModel.QuotaQuantity" style="margin:10px 20px 20px 0; width:90px" />
                    <span>Remaining Quantity</span>
                    <input id="remaining" type="number" disabled value="@Model.HoldModel.ReminingQuantity" style="margin:10px 20px 20px 0; width:90px" />
                    <span>Extra Quantity</span>
                    <input id="remaining" type="number" disabled value="@Model.HoldModel.ExtraQuantity" style="margin:10px 20px 20px 0; width:90px" />

                </div>
            }

        </tbody>
    </table>
</form>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script src="~/filter/ddtf.js"></script>
<script>
    $('#example').ddTableFilter();
</script>
