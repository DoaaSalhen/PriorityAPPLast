@model PriorityApp.Service.Models.GeoFilterModel
@inject UserManager<AspNetUser> userManager
@inject SignInManager<AspNetUser> SignInManager
@{ ViewData["Title"] = "Index";
                Layout = "~/Views/Shared/NiceAdmin/_CSLayout.cshtml";
                float holdReminingQuantity = 0;
                var user = await userManager.GetUserAsync(User);
                var roles = await userManager.GetRolesAsync(user);
                //int index = 0;
 }
<style>
    #NOOrdersSpain {
        margin: auto;
    }


    table {
        border-collapse: collapse;
        border-spacing: 0;
        border: 5px solid #ddd;
    }

    th, td {
        text-align: center;
    }

    tr:nth-child(even) {
        background-color: #f2f2f2
    }

    .qty {
        margin-right: 40px;
        margin-top: 0px;
    }

    input[type=number] {
        width: 50px;
    }

    th {
        cursor: pointer;
    }
</style>
@*<script src="~/DataTable/jquery-3.5.1.js"></script>*@
@*<script src="~/DataTable/jquery.dataTables.min.js"></script>
    <link rel="stylesheet" href="~/DataTable/jquery.dataTables.min.css">
    <script src="/lib/jquery/dist/jquery.js"></script>*@
@*<link href="~/DataTable/bootstrap.css" rel="stylesheet" />
    <link href="~/DataTable/dataTables.bootstrap4.min.css" rel="stylesheet" />
    <link href="~/DataTable/jquery.dataTables.min.css" rel="stylesheet" />
    <script src="~/DataTable/jquery-3.6.0.min.js"></script>
    <script src="~/DataTable/dataTables.bootstrap4.min.js"></script>*@
@*<link rel="stylesheet" href="~/css/newStyleSheet.css">*@

<script src="~/DataTable/jquery-3.5.1.js"></script>
<script src="~/DataTable/jquery.dataTables.min.js"></script>
<link rel="stylesheet" href="~/DataTable/jquery.dataTables.min.css">
@*<script src="/lib/jquery/dist/jquery.js"></script>*@

@if (ViewBag.Message != null)
{
<div style="background-color: #00e600; height: 60px; box-shadow: 5px; margin: 0px 20px 20px 50px; text-align:center; font-size:x-large">@ViewBag.Message</div> }
else if (ViewBag.Error != null)
{

<div style="background-color: #ff3333; height: 60px; box-shadow: 5px; margin: 0px 20px 20px 50px; text-align: center; font-size: x-large">@ViewBag.Error</div>///////////////////////////////*@ <!--<div class="modal">--> <!-- Modal content -->

}


@if (Model != null && Model.HoldModel != null)
{

<script>
        var holdReminingQuantity3 = @Model.HoldModel.ReminingQuantity;
        var holdAssignedQuantity3 = @Model.holdTotalAssignedQuantity;
         var holdExtraQuantity3 = @Model.HoldModel.ExtraQuantity;

</script> } @*<script>
        $(document).ready(function () {
            $('#example').DataTable();
            "paging": false;
        });
    </script>*@
<script>

</script>

<script type="text/javascript">
    $(document).ready(function () {
        $('#SubRegionSelectedId').change(function () {
            var ddlsource = "#SubRegionSelectedId";
            var subItems = '';
            if ($(ddlsource).val() != -1) {
                var url = '@Url.Content("~/")' + "PriorityTool/CSDeliveryOrder/StateFilter";
                $.getJSON(url, { id: $(ddlsource).val() }, function (data) {
                    $('#StateSelectedId').empty();
                    $.each(data, function (i, state) {
                        subItems += "<option value='" + state.value + "'>" + state.text + "</option>";
                    });
                    $('#StateSelectedId').html(subItems);
                });
            }
            else
            {
                $('#StateSelectedId').html(subItems);
            }
        });


        $('#StateSelectedId').change(function () {
            var ddlsource = "#StateSelectedId";

            var territoryItems = '';
            if ($(ddlsource).val() != -1) {
                var url = '@Url.Content("~/")' + "PriorityTool/CSDeliveryOrder/TerritoryFilter";
                $.getJSON(url, { id: $(ddlsource).val() }, function (data) {
                    $('#TerritorySelectedId').empty();
                    $.each(data, function (i, territory) {
                        territoryItems += "<option value='" + territory.value + "'>" + territory.text + "</option>";
                    });
                    $('#TerritorySelectedId').html(territoryItems);
                });
            }
            else
            {
                $('#TerritorySelectedId').html(territoryItems);

            }

        });

        $('#TerritorySelectedId').change(function () {

            var ddlsource = "#TerritorySelectedId";
            var zoneItems = '';

            if ($(ddlsource).val() != -1) {
                var url = '@Url.Content("~/")' + "PriorityTool/CSDeliveryOrder/ZoneFilter";
                $.getJSON(url, { id: $(ddlsource).val() }, function (data) {
                    $('#ZoneSelectedId').empty();
                    $.each(data, function (i, zone) {
                        zoneItems += "<option value='" + zone.value + "'>" + zone.text + "</option>";
                    });
                    $('#ZoneSelectedId').html(zoneItems);
                });
            }
            else
            {
                $('#ZoneSelectedId').html(zoneItems);
            }
        });


    });
    var AssignedValuesArray = [];
    var SavedValuesArray = [];
    var totalQuantity = 0;
    var extraQuantity = 0;
    var ExtraValuesArray = [];
    function QuantityValidation(orderQuantity, radioButtonListId, index, priorityQuantityId, holdReminingQuantity2, savedBefore, savedPriorityQuantity, savedPriorityId, holdTotalAssignedQuantity, holdtotalExtraQuantity) {

        var tempholdReminingQuantity3 = holdReminingQuantity3;
        var insertedQuantity = priorityQuantityId.value;
        var selectedPriorityId = radioButtonListId.value;
        var tempholdAssignedQuantity3 = holdAssignedQuantity3;
        var tempholdExtraQuantity3 = holdExtraQuantity3;
        var compareResult = true;
        var totalCheckResult = false;
        //savedBefore = document.getElementById("OrderModel_orders_" + index + "__SavedBefore").value ;
        //savedPriorityId = document.getElementById("RBLI" + index).value;

        var compareResult = compareInsertedQuantityVSOrderQuantity(insertedQuantity, orderQuantity);
        var checkboxes = document.getElementsByClassName('CheckDeliveryOrders');
        if (compareResult == true)
        {

            if (savedBefore == true && SavedValuesArray[index] == undefined) {
                if (savedPriorityId == 3) {
                    alert("test");
                    holdReminingQuantity3 = parseFloat(holdReminingQuantity3) + savedPriorityQuantity;
                    tempholdReminingQuantity3 = tempholdReminingQuantity3 + savedPriorityQuantity;
                    holdAssignedQuantity3 = parseFloat(holdAssignedQuantity3) - savedPriorityQuantity;
                    tempholdAssignedQuantity3 = tempholdAssignedQuantity3 - savedPriorityQuantity;
                }
                if (savedPriorityId == 4) {
                    tempholdExtraQuantity3 = tempholdExtraQuantity3 - savedPriorityQuantity;
                    holdExtraQuantity3 = holdExtraQuantity3 - savedPriorityQuantity;

                }
                SavedValuesArray[index] = 1;
                document.getElementById("remaining").value = tempholdReminingQuantity3.toFixed(2);
                document.getElementById("calculatedRemainingQuantity").value = tempholdReminingQuantity3.toFixed(2);
                document.getElementById('test').value = tempholdReminingQuantity3.toFixed(2);
                document.getElementById("extra").value = tempholdExtraQuantity3.toFixed(2);
            }

            if (selectedPriorityId == 3) {
                AssignedValuesArray[index] = insertedQuantity;
                ExtraValuesArray[index] = 0;

            }
            if (selectedPriorityId == 4) {
                AssignedValuesArray[index] = 0;
                ExtraValuesArray[index] = insertedQuantity;

            }
            else if (selectedPriorityId == 2) {
                AssignedValuesArray[index] = 0;
                ExtraValuesArray[index] = 0;
            }
            extraQuantity = ExtraValuesArray.reduce(function (a, b) { return parseFloat(a) + parseFloat(b); });
            document.getElementById("extra").value = (parseFloat(tempholdExtraQuantity3) + parseFloat(extraQuantity)).toFixed(2);
            totalQuantity = AssignedValuesArray.reduce(function (a, b) { return parseFloat(a) + parseFloat(b); });
            totalCheckResult = checkTotalQuantityVsHoldRemainingQuantity(tempholdReminingQuantity3, totalQuantity, tempholdAssignedQuantity3);
            if (totalCheckResult == false) {
                alert("you do not have enough quantity");
                resetIfFalse(index, priorityQuantityId, radioButtonListId, tempholdReminingQuantity3, tempholdAssignedQuantity3, tempholdExtraQuantity3);
            }
            else
            {

                var orderModel =
                {
                    Id: document.getElementById("OrderModel_orders_" + index + "__Id").value,
                    PriorityQuantity: document.getElementById("PQ" + index).value,
                    PriorityId: document.getElementById("RBLI" + index).value,
                    Comment: document.getElementById("OrderModel_orders_" + index + "__Comment").value,
                    Truck: document.getElementById("OrderModel_orders_" + index + "__Truck").value,
                    ItemId: document.getElementById("OrderModel_orders_" + index + "__ItemId").value,
                    PriorityDate: document.getElementById("SelectedPriorityDate").value,
                    UserId: document.getElementById("userId").value
                }
                        $.ajax({
                            url: '@Url.Content("~/")' + "PriorityTool/CSDeliveryOrder/SaveOrders2",
                            data: orderModel,
                            type: "POST",
                            async: false,
                            //processData: false,
                            //contentType: false
                            success: function (data) {

                                if (document.getElementById("RBLI" + index).value == 3)
                                {
                                    document.getElementById("tr" + index).style.backgroundColor = "lawngreen";
                                    document.getElementById("OrderModel_orders_" + index + "__SavedBefore").value = "True";
                                    checkboxes[index].checked = true;
                                }
                                else if (document.getElementById("RBLI" + index).value == 4) {
                                    document.getElementById("tr" + index).style.backgroundColor = "#ff4d4d";
                                    document.getElementById("OrderModel_orders_" + index + "__SavedBefore").value = "True";
                                    checkboxes[index].checked = true;

                                }
                                else if (document.getElementById("RBLI" + index).value == 2) {
                                    document.getElementById("tr" + index).style.backgroundColor = "";
                                    document.getElementById("OrderModel_orders_" + index + "__SavedBefore").value = "False";
                                    checkboxes[index].checked = false;
                                }
                            }

                });
            }

        document.getElementById("sum").value = (parseFloat(document.getElementById("extra").value) + parseFloat(document.getElementById("total").value)).toFixed(2);
    }
    else {
            alert("please you must insert quantity less than or equal order quantity");
            resetIfFalse(index, priorityQuantityId, radioButtonListId, holdReminingQuantity2, tempholdAssignedQuantity3, tempholdExtraQuantity3);
        }

    }

    function resetIfFalse(index, priorityQuantityId, radioButtonListId, holdReminingQuantity3, holdTotalAssignedQuantity, tempholdExtraQuantity3) {
        priorityQuantityId.value = 0;
        radioButtonListId.value = 2;
        AssignedValuesArray[index] = 0;
        ExtraValuesArray[index] = 0;
        extraQuantity = ExtraValuesArray.reduce(function (a, b) { return parseFloat(a) + parseFloat(b); });;
        totalQuantity = AssignedValuesArray.reduce(function (a, b) { return parseFloat(a) + parseFloat(b); });
        document.getElementById("total").value = holdTotalAssignedQuantity + Math.abs(totalQuantity).toFixed(2);
        document.getElementById("extra").value = (tempholdExtraQuantity3 + Math.abs(extraQuantity)).toFixed(2);
        checkTotalQuantityVsHoldRemainingQuantity(holdReminingQuantity3, totalQuantity, holdTotalAssignedQuantity);
    }

    function compareInsertedQuantityVSOrderQuantity(insertedQuantity, orderQuantity) {
        if (insertedQuantity <= orderQuantity) {
            return true;
        }
        else {
            return false;
        }
    }
    function checkTotalQuantityVsHoldRemainingQuantity(holdReminingQuantity2, totalQuantity, tempholdAssignedQuantity3) {

        holdReminingQuantity2 = holdReminingQuantity2 - totalQuantity;

        document.getElementById("remaining").value = holdReminingQuantity2;

        document.getElementById("total").value = tempholdAssignedQuantity3 + Math.abs(totalQuantity);

        document.getElementById("calculatedRemainingQuantity").value = holdReminingQuantity2;
        document.getElementById('test').value = holdReminingQuantity2;
        if (holdReminingQuantity2 >= 0) {
            return true;
        }
        else {
            return false;
        }
    }

    function updateComment(index)
    {

        var Details =
        {
            Id: document.getElementById("OrderModel_orders_" + index + "__Id").value,
            Comment: document.getElementById("OrderModel_orders_" + index + "__Comment").value,
        }

        var url = '@Url.Content("~/")' + "PriorityTool/CSDeliveryOrder/SaveComment";
        $.getJSON(url, Details, function (data) {
        });
    }

    function updateTruck(index)
    {

        var Details =
        {
            Id: document.getElementById("OrderModel_orders_" + index + "__Id").value,
            Truck: document.getElementById("OrderModel_orders_" + index + "__Truck").value,
        }
        var url = '@Url.Content("~/")' + "PriorityTool/CSDeliveryOrder/SaveTruck";
        $.getJSON(url, Details, function (data) {
        });
    }

    function checkAllSelectedOrders(e)
    {
        if (e.checked) {
            var elements = document.getElementsByClassName("Orders");
            var checkboxes = document.getElementsByClassName('CheckDeliveryOrders');
            var shownElements = [];
            var shownCount = 0;
            for (var eleIndex = 1; eleIndex < elements.length ; eleIndex++)
            {
                //alert(document.getElementById("OrderModel_orders_" + eleIndex + "__SavedBefore"));

                var saved = document.getElementById("OrderModel_orders_" + eleIndex + "__SavedBefore").value;
                //alert(saved);
                if (elements[eleIndex].style.display != "none" && saved == "False")
                {
                    //shownElements[shownCount] = elements[eleIndex];
                    //shownCount = shownCount + 1;
                    //alert(eleIndex);
                    if (!checkboxes[eleIndex].disabled)
                    {
                        checkboxes[eleIndex].checked = !checkboxes[eleIndex].checked;
                        //alert(eleIndex);
                    }

                }
            }
            let checkboxes1 = document.getElementsByClassName('CheckDeliveryOrders');
            var checkedOrders = new Array();
            var promises = [];
            for (let checkIndex = 1; checkIndex < checkboxes1.length; checkIndex++) {
                let saved = document.getElementById("OrderModel_orders_" + checkIndex + "__SavedBefore").value;
                if (checkboxes[checkIndex].checked && saved == "False") {
                    let remaining = parseFloat(document.getElementById("remaining").value);
                    let PriorityQuantity = parseFloat(document.getElementById("PQ" + checkIndex).value);
                    //alert(checkIndex);
                    // alert(PriorityQuantity);
                    //alert(remaining);
                    if (remaining >= PriorityQuantity) {
                        if (saved == "False") {
                            let order = document.getElementById("RBLI" + checkIndex).value = 3;
                            var orderModel =
                            {
                                Id: document.getElementById("OrderModel_orders_" + checkIndex + "__Id").value,
                                PriorityQuantity: document.getElementById("PQ" + checkIndex).value,
                                PriorityId: document.getElementById("RBLI" + checkIndex).value,
                                Comment: document.getElementById("OrderModel_orders_" + checkIndex + "__Comment").value,
                                Truck: document.getElementById("OrderModel_orders_" + checkIndex + "__Truck").value,
                                ItemId: document.getElementById("OrderModel_orders_" + checkIndex + "__ItemId").value,
                                PriorityDate: document.getElementById("SelectedPriorityDate").value,
                                UserId: document.getElementById("userId").value
                            }
                            $.ajax({
                                url: '@Url.Content("~/")' + "PriorityTool/CSDeliveryOrder/SaveOrders2",
                                data: orderModel,
                                type: "POST",
                                async: false,
                                //processData: false,
                                //contentType: false
                                success: function (data) {
                                    document.getElementById("remaining").value = parseFloat(document.getElementById("remaining").value) - parseFloat(orderModel.PriorityQuantity);
                                    document.getElementById("sum").value = parseFloat(document.getElementById("sum").value) + parseFloat(orderModel.PriorityQuantity);
                                    document.getElementById("total").value = parseFloat(document.getElementById("total").value) + parseFloat(orderModel.PriorityQuantity);
                                    document.getElementById("OrderModel_orders_" + checkIndex + "__SavedBefore").value = "True";
                                    document.getElementById("tr" + checkIndex).style.backgroundColor = "lawngreen";
                                    holdReminingQuantity3 = parseFloat(document.getElementById("remaining").value);
                                    holdAssignedQuantity3 = parseFloat(document.getElementById("total").value);
                                    alert(document.getElementById("OrderModel_orders_" + checkIndex + "__SavedBefore").value);
                                }
                            });
                            //alert(holdReminingQuantity3);
                            //alert(holdAssignedQuantity3);
                        }
                        else {
                            var orderNumber = document.getElementById("OrderModel_orders_" + checkIndex + "__OrderNumber").value;
                            alert("Order number " + orderNumber + " has saved before");
                        }

                    }
                    else {
                        alert("you do not have enough quantity");
                        break;
                    }

                }
            }

        }
    }
    function unSaveOrder(index)
    {
        var checkboxes = document.getElementsByClassName('CheckDeliveryOrders');
        if (!checkboxes[index].checked)
        {
            var order = document.getElementById("RBLI" + index).value;
            checkboxes[index].checked = false;
            if (order == 3) {
                document.getElementById("RBLI" + index).value = 2;

                var orderModel =
                {
                    Id: document.getElementById("OrderModel_orders_" + index + "__Id").value,
                    PriorityQuantity: document.getElementById("PQ" + index).value,
                    PriorityId: document.getElementById("RBLI" + index).value,
                    Comment: document.getElementById("OrderModel_orders_" + index + "__Comment").value,
                    Truck: document.getElementById("OrderModel_orders_" + index + "__Truck").value,
                    ItemId: document.getElementById("OrderModel_orders_" + index + "__ItemId").value,
                    PriorityDate: document.getElementById("SelectedPriorityDate").value,
                    UserId: document.getElementById("userId").value
                }
               $.ajax({
                            url: '@Url.Content("~/")' + "PriorityTool/CSDeliveryOrder/SaveOrders2",
                            data: orderModel,
                            type: "POST",
                            async: false,
                            //processData: false,
                            //contentType: false
                   success: function (data) {
                       //alert("test");
                                document.getElementById("remaining").value = parseFloat(document.getElementById("remaining").value) + parseFloat(orderModel.PriorityQuantity);
                                document.getElementById("sum").value = parseFloat(document.getElementById("sum").value) - parseFloat(orderModel.PriorityQuantity);
                                document.getElementById("total").value = parseFloat(document.getElementById("total").value) - parseFloat(orderModel.PriorityQuantity);
                                document.getElementById("OrderModel_orders_" + index + "__SavedBefore").value = "True";
                                document.getElementById("tr" + index).style.backgroundColor = "";
                                holdReminingQuantity3 = parseFloat(document.getElementById("remaining").value);
                                holdAssignedQuantity3 = parseFloat(document.getElementById("total").value);
                            }
                        });

            }

        }
        else
        {
            var order = document.getElementById("RBLI" + index).value;
            checkboxes[index].checked = true;
            if (order == 2)
            {
              
                var remain = parseFloat(document.getElementById("remaining").value) - parseFloat(document.getElementById("PQ" + index).value);
                if (remain > 0) {
                    document.getElementById("RBLI" + index).value = 3;
                    var orderModel =
                    {
                        Id: document.getElementById("OrderModel_orders_" + index + "__Id").value,
                        PriorityQuantity: document.getElementById("PQ" + index).value,
                        PriorityId: document.getElementById("RBLI" + index).value,
                        Comment: document.getElementById("OrderModel_orders_" + index + "__Comment").value,
                        Truck: document.getElementById("OrderModel_orders_" + index + "__Truck").value,
                        ItemId: document.getElementById("OrderModel_orders_" + index + "__ItemId").value,
                        PriorityDate: document.getElementById("SelectedPriorityDate").value,
                        UserId: document.getElementById("userId").value

                    }
                    $.ajax({
                        url: '@Url.Content("~/")' + "PriorityTool/CSDeliveryOrder/SaveOrders2",
                        data: orderModel,
                        type: "POST",
                        async: false,
                        //processData: false,
                        //contentType: false
                        success: function (data) {
                            document.getElementById("remaining").value = parseFloat(document.getElementById("remaining").value) - parseFloat(orderModel.PriorityQuantity);
                            document.getElementById("sum").value = parseFloat(document.getElementById("sum").value) + parseFloat(orderModel.PriorityQuantity);
                            document.getElementById("total").value = parseFloat(document.getElementById("total").value) + parseFloat(orderModel.PriorityQuantity);
                            document.getElementById("OrderModel_orders_" + index + "__SavedBefore").value = "True";
                            document.getElementById("tr" + index).style.backgroundColor = "lawngreen";
                            holdReminingQuantity3 = parseFloat(document.getElementById("remaining").value);
                            holdAssignedQuantity3 = parseFloat(document.getElementById("total").value);
                        }
                    });
                }
                else
                {
                    alert("you donot have enough quantity");
                    holdReminingQuantity3 = parseFloat(document.getElementById("remaining").value);
                    holdAssignedQuantity3 = parseFloat(document.getElementById("total").value);
                }


            }
        }

    }
</script>
<script>
    $(document).ready(function () {
        $(window).keydown(function (event) {
            if (event.keyCode == 13) {
                event.preventDefault();
                return false;
            }
        });
    });
</script>
<script>
    //function sortTable(e) {
    //    var n = e.value;
    //    var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
    //    table = document.getElementById("example");
    //    switching = true;
    //    //Set the sorting direction to ascending:
    //    dir = "asc";
    //    /*Make a loop that will continue until
    //    no switching has been done:*/
    //    while (switching) {
    //        //start by saying: no switching is done:
    //        switching = false;
    //        rows = table.rows;
    //        /*Loop through all table rows (except the
    //        first, which contains table headers):*/
    //        for (i = 1; i < (rows.length - 1); i++) {
    //            //start by saying there should be no switching:
    //            shouldSwitch = false;
    //            /*Get the two elements you want to compare,
    //            one from current row and one from the next:*/
    //            x = rows[i].getElementsByTagName("td")[n];
    //            y = rows[i + 1].getElementsByTagName("td")[n];
    //            /*check if the two rows should switch place,
    //            based on the direction, asc or desc:*/
    //            if (n == 9 || n == 8 || n == 4 || n == 2) {
    //                //alert(n);
    //                //alert(x.innerText);
    //                //alert(y);
    //                if (Number(x.innerText) > Number(y.innerText)) {
    //                    //if so, mark as a switch and break the loop:
    //                    shouldSwitch = true;
    //                    //alert(x.innerHTML);
    //                    break;
    //                }
    //            }
    //            else {
    //                //alert(n);
    //                //alert(x.innerHTML);
    //                //alert(y.innerHTML);
    //                if (dir == "asc") {
    //                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
    //                        //if so, mark as a switch and break the loop:
    //                        shouldSwitch = true;
    //                        break;
    //                    }
    //                }
    //                else if (dir == "desc") {
    //                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
    //                        //if so, mark as a switch and break the loop:
    //                        shouldSwitch = true;
    //                        break;
    //                    }
    //                }
    //            }

    //        }
    //        if (n == 9 || n == 8 || n == 4 || n == 2) {
    //            if (shouldSwitch) {
    //                /*If a switch has been marked, make the switch
    //                and mark that a switch has been done:*/
    //                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
    //                switching = true;
    //                //Each time a switch is done, increase this count by 1:
    //                switchcount++;
    //            }
    //            else {
    //                /*If no switching has been done AND the direction is "asc",
    //                set the direction to "desc" and run the while loop again.*/
    //                if (switchcount == 0 && dir == "asc") {
    //                    dir = "desc";
    //                    switching = true;
    //                }
    //            }
    //        }
    //        else {
    //            if (shouldSwitch) {
    //                /*If a switch has been marked, make the switch
    //                and mark that a switch has been done:*/
    //                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
    //                switching = true;
    //            }
    //        }

    //    }
    //}


    function sorting(thIndex) {
        var ths = document.getElementsByTagName("th");
        var test = ths[thIndex];
        var table = $(test).parents('table').eq(0)
        var rows = table.find('tr:gt(0)').toArray().sort(comparer($(test).index()))
        test.asc = !test.asc
        if (!test.asc) { rows = rows.reverse() }
        for (var i = 0; i < rows.length; i++) { table.append(rows[i]) }
    }
    function comparer(index) {
        return function (a, b) {
            var valA = getCellValue(a, index), valB = getCellValue(b, index)
            return $.isNumeric(valA) && $.isNumeric(valB) ? valA - valB : valA.toString().localeCompare(valB)
        }
    }
    function getCellValue(row, index) { return $(row).children('td').eq(index).text() }
</script>


<style>

    table {
        margin-bottom: 20px;
    }

    .selectFilter {
        margin-left: 30px;
    }

    .searchbtn {
        margin: 20px 20px 20px 40px;
        border-radius: 10px;
        width: 200px;
    }

    input[type=number] {
        width: 50px;
        height: 25px;
    }
</style>
<script>
    $(document).ready(function () {
        var table = $('#example').DataTable({
            "ordering": false,
            "paging": false,
        });
    });

</script>

<form asp-controller="CSDeliveryOrder" asp-action="SearchForOrders" method="post" class="form-horizontal" role="form">
    <div class="alert-danger" asp-validation-summary="ModelOnly"></div>
    <div class="form-group">
        <div class="form-row">
            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-4 selectFilter" style="display:inline-block">
                <label class="control-label" style="display:block">Priority Date</label>
                <input class="form-select form-select-lg mb-3" type="date" id="SelectedPriorityDate" asp-for="SelectedPriorityDate" />
                <input type="hidden" asp-for="orderType" value=1 />
            </div>

            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-4 selectFilter" style="display:inline-block">
                <label class="control-label">Products</label>
                <select id="ItemSelectedId" name="ItemSelectedId" asp-for="ItemSelectedId"
                        class="form-select form-select-lg mb-3"
                        asp-items="@(new SelectList(Model.Items, "Id", "Name"))"></select>
            </div>
        </div>
        <div class="form-row" style="width:100%">
            @if (!roles.Contains("Sales"))
            {
        @if (Model.SubRegions == null)
        {
        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
            <label class="control-label">Region</label>
            <select id="SubRegionSelectedId" name="SubRegionSelectedId" asp-for="SubRegionSelectedId"
                    class="form-select form-select-lg mb-3"
                    asp-items="@(new SelectList(string.Empty, "Id", "Name"))"></select>
        </div> }
    else
    {
        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
            <label class="control-label">Region</label>
            <select id="SubRegionSelectedId" name="SubRegionSelectedId" asp-for="SubRegionSelectedId"
                    class="form-select form-select-lg mb-3"
                    asp-items="@(new SelectList(Model.SubRegions, "Id", "Name"))"></select>
        </div>  }
                        @if (Model.States == null)
                        {
        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
            <label class="control-label">State</label>
            <select id="StateSelectedId" name="StateSelectedId" asp-for="StateSelectedId"
                    class="form-select form-select-lg mb-3"
                    asp-items="@(new SelectList(string.Empty, "Id", "Name"))"></select>
        </div> }
    else
    {
        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
            <label class="control-label">State</label>
            <select id="StateSelectedId" name="StateSelectedId" asp-for="StateSelectedId"
                    class="form-select form-select-lg mb-3"
                    asp-items="@(new SelectList(Model.States, "Id", "Name"))"></select>
        </div>  }

                                        @if (Model.Territories == null)
                                        {
                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
                            <label class="control-label">Territory</label>

                            <select id="TerritorySelectedId" name="TerritorySelectedId" asp-for="TerritorySelectedId"
                                    class="form-select form-select-lg mb-3"
                                    asp-items="@(new SelectList(string.Empty, "Id", "Name"))"></select>
                        </div> }
                    else
                    {
        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
            <label class="control-label">Territory</label>

            <select id="TerritorySelectedId" name="TerritorySelectedId" asp-for="TerritorySelectedId"
                    class="form-select form-select-lg mb-3"
                    asp-items="@(new SelectList(Model.Territories, "Id", "Name"))"></select>
        </div>}}
            @if (Model.Zones == null)
            {
        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
            <label class="control-label">Zone</label>
            <select id="ZoneSelectedId" name="ZoneSelectedId" asp-for="ZoneSelectedId"
                    class="form-select form-select-lg mb-3"
                    asp-items="@(new SelectList(string.Empty, "Id", "Name"))"></select>
        </div> }
    else
    {
        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
            <label class="control-label">Zone</label>
            <select id="ZoneSelectedId" name="ZoneSelectedId" asp-for="ZoneSelectedId"
                    class="form-select form-select-lg mb-3"
                    asp-items="@(new SelectList(Model.Zones, "Id", "Name"))"></select>
        </div>}

            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
                <label class="control-label">Saved</label>
                <select id="PendingSelectedId" name="PendingSelectedId" asp-for="PendingSelectedId"
                        class="form-select form-select-lg mb-3">
                    <option value="-1">All</option>
                    <option value="1">Saved Only</option>
                    <option value="2">Pend Only</option>
                </select>
            </div>
            @*<input type="checkbox" id="SavedOnly" asp-for="SavedOnly" name="SavedOnly" style="margin-left:20px;" />
            <label class="control-label" style="margin-right:20px;">SavedOnly</label>*@
            <input type="submit" value="Search" class="btn btn-primary btn-lg searchbtn" />
           

        </div>


    </div>
    @if (Model.FilterColoumns == null)
    {
<div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
    <label class="control-label">Sort by</label>
    <select multiple id="sortingDD" name="sortingDD"
            class="form-select form-select-lg mb-3"
            asp-items="@(new SelectList(string.Empty, "ID", "Name","Type"))"></select>
</div> }
            else
            {
<div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
    <label class="control-label">Sort by</label>
    <select multiple id="sortingDD" name="sortingDD"
            class="form-select form-select-lg mb-3"
            asp-items="@(new SelectList(Model.FilterColoumns, "ID", "Name", "Type"))" onclick="sorting(this.value)"></select>
</div>}

</form>

@*<div class="row FormMaindiv">*@
<form class="CreateForm" asp-controller="CSDeliveryOrder" method="post">
    <table id="example" class="display table table-striped" style="text-align: center; width:100%">
        <thead class="table-dark">
            <tr>
                <th class="skip-filter"><input type="checkbox" id="DispatchedChexboxHeadId" onchange="checkAllSelectedOrders(this)" /></th>
                <th scope="col"> Customer Name</th>
                <th>Order Number</th>
                @*<th>line</th>*@
                <th> Item </th>
                <th> POD Number</th>
                <th> POD Name</th>
                <th> POD Address</th>
                @*<th> POD Zone</th>*@
                <th> POD  State</th>
                <th> O.Qty</th>
                <th> Priority</th>
                <th>Qty</th>
                <th>Comment</th>
                <th>Truck</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.OrderModel != null)
            {
                if (Model.HoldModel != null)
                {

<script>
                         var holdReminingQuantity2 = @Model.HoldModel.ReminingQuantity;
</script> holdReminingQuantity = Model.HoldModel.ReminingQuantity;
@for (int index = 0; index < Model.OrderModel.orders.Count; index++)
{
    string radioButtonListId = "";
    radioButtonListId = "RBLI" + index;
    string priorityQuantityId = "";
    priorityQuantityId = "PQ" + index;
    string podDetailsId = "POD" + index;
    string TrId = "tr" + index;


<tr class="Orders" id="@TrId" style="display:normal">
    @if (Model.OrderModel.orders[index].SavedBefore == true)
    {
<td class="skip-filter">
    <input type="checkbox" id="dispatchedCheckListId" class="CheckDeliveryOrders" disabled asp-for="OrderModel.orders[index].SavedBefore" value="@Model.OrderModel.orders[index].SavedBefore" />
</td> }
                        else
                        {
<td class="skip-filter">
    <input type="checkbox" id="dispatchedCheckListId" class="CheckDeliveryOrders" asp-for="OrderModel.orders[index].SavedBefore" onchange="unSaveOrder(@index)" value="@Model.OrderModel.orders[index].SavedBefore" />
</td>}
    <td>
        @Html.DisplayFor(model => model.OrderModel.orders[index].Customer.CustomerName)
        <input class="form-check-input" asp-for="OrderModel.orders[index].CustomerId" type="hidden" />
        <input class="form-check-input" asp-for="OrderModel.orders[index].Id" type="hidden" />
    </td>
    @*<td>
            @Html.DisplayFor(model => model.OrderModel.orders[index].Customer.CustomerType)
            <input class="form-check-input" asp-for="OrderModel.orders[index].Customer.CustomerType" type="hidden" />
        </td>*@
    <td>
        @Html.DisplayFor(model => model.OrderModel.orders[index].OrderNumber)
        <input class="form-check-input" asp-for="OrderModel.orders[index].OrderNumber" type="hidden" />
        @*@Html.DisplayFor(model => model.OrderModel.orders[index].TerritoryId)*@
        @*<input class="form-check-input" asp-for="OrderModel.orders[index].TerritoryId" type="hidden" />*@
    </td>

    @*<td>
        @Html.DisplayFor(model => model.OrderModel.orders[index].LineID)
        <input class="form-check-input" asp-for="OrderModel.orders[index].LineID" type="hidden" />*@
    @*</td>*@

    <td>
        @Html.DisplayFor(model => model.OrderModel.orders[index].Item.Name)
        <input class="form-check-input" asp-for="OrderModel.orders[index].ItemId" type="hidden" />
    </td>
    <td>
        @Html.DisplayFor(model => model.OrderModel.orders[index].PODNumber)
        <input class="form-check-input" asp-for="OrderModel.orders[index].PODNumber" type="hidden" />

    </td>
    <td>
        @Html.DisplayFor(model => model.OrderModel.orders[index].PODName)
        <input class="form-check-input" asp-for="OrderModel.orders[index].PODName" type="hidden" />

    </td>
    <td>
        @Html.DisplayFor(model => model.OrderModel.orders[index].PODZoneAddress)
        <input class="form-check-input" asp-for="OrderModel.orders[index].PODZoneAddress" type="hidden" />

    </td>
    @*<td>
            @Html.DisplayFor(model => model.OrderModel.orders[index].PODZoneName)
            <input class="form-check-input" asp-for="OrderModel.orders[index].PODZoneName" type="hidden" />
        </td>*@
    <td>
        @Html.DisplayFor(model => model.OrderModel.orders[index].PODZoneState)
        <input class="form-check-input" asp-for="OrderModel.orders[index].PODZoneState" type="hidden" />
    </td>
    <td>
        @Html.DisplayFor(model => model.OrderModel.orders[index].OrderQuantity)
        <input class="form-check-input" asp-for="OrderModel.orders[index].OrderQuantity" type="hidden" />

    </td>


    @if (Model.OrderModel.orders[index].Submitted == true)
    {
<td>
    <select id="@radioButtonListId" name="OrderModel.orders[@index].PriorityId" disabled asp-for="OrderModel.orders[index].PriorityId"
            asp-items="@(new SelectList(Model.Priorities, "Id", "Name"))" onchange="QuantityValidation(@Model.OrderModel.orders[index].OrderQuantity, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, false, 0,@Model.HoldModel.QuotaQuantity)"></select>


</td> @*<td style="width:200px">
                                    <div> <input class="form-check-input" id=@radioButtonListId asp-for="OrderModel.orders[index].PriorityId" type="radio" value="2" disabled style="margin-left:40px" onchange="QuantityValidation(@Model.OrderModel.orders[index].OrderQuantity, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, false, 0)" /><label style="margin-left:60px">No</label></div>
                                    <div> <input class="form-check-input" id=@radioButtonListId asp-for="OrderModel.orders[index].PriorityId" type="radio" value="3" disabled style="margin-left:40px" onchange="QuantityValidation(@Model.OrderModel.orders[index].OrderQuantity, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, false, 0)" /><label style="margin-left:60px">Norm</label></div>
                                    <div><input class="form-check-input" id=@radioButtonListId asp-for="OrderModel.orders[index].PriorityId" type="radio" value="4" disabled style="margin-left:40px" onchange="QuantityValidation(@Model.OrderModel.orders[index].OrderQuantity, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, false, 0)" /><label style="margin-left:60px">Extra</label> </div>
                                </td>*@
                            <td style="width:300px">
                                <input class="form-check-input qty" asp-for="OrderModel.orders[index].PriorityQuantity" disabled type="Number" style="width:100px" />

                            </td>
                                                        <td>
                                                            <input class="form-check-input" asp-for="OrderModel.orders[index].Comment" type="text" style="width:100px" disabled value="@Model.OrderModel.orders[index].Comment" />
                                                        </td> }
                                                                                else if (Model.OrderModel.orders[index].SavedBefore == true && Model.OrderModel.orders[index].Submitted == false)
                                                                                {
                                                        <!--<td>
                                                            <select id="@radioButtonListId" name="OrderModel.orders[@index].PriorityId" asp-for="OrderModel.orders[index].PriorityId"
                                                                    asp-items="@(new SelectList(Model.Priorities, "Id", "Name"))" onchange="QuantityValidation(@Model.OrderModel.orders[index].OrderQuantity, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, true, @Model.OrderModel.orders[index].PriorityQuantity, @Model.OrderModel.orders[index].PriorityId, @Model.HoldModel.QuotaQuantity)"></select>


                                                        </td>--> @*<td style="width:200px">
                                                                <div> <input class="form-check-input" id=@radioButtonListId asp-for="OrderModel.orders[index].PriorityId" type="radio" value="2" disabled style="margin-left:40px" onchange="QuantityValidation(@Model.OrderModel.orders[index].OrderQuantity, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, true, @Model.OrderModel.orders[index].PriorityQuantity, @Model.OrderModel.orders[index].PriorityId)" /><label style="margin-left:60px">No</label></div>
                                                                <div> <input class="form-check-input" id=@radioButtonListId asp-for="OrderModel.orders[index].PriorityId" type="radio" value="3" style="margin-left:40px" onchange="QuantityValidation(@Model.OrderModel.orders[index].OrderQuantity, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, true, @Model.OrderModel.orders[index].PriorityQuantity, @Model.OrderModel.orders[index].PriorityId)" /><label style="margin-left:60px">Norm</label></div>
                                                                <div> <input class="form-check-input" id=@radioButtonListId asp-for="OrderModel.orders[index].PriorityId" type="radio" value="4" style="margin-left:40px" onchange="QuantityValidation(@Model.OrderModel.orders[index].OrderQuantity, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, true, @Model.OrderModel.orders[index].PriorityQuantity, @Model.OrderModel.orders[index].PriorityId)" /><label style="margin-left:60px">Extra</label></div>
                                                            </td>*@
                                                                                    <!--<td style="width:300px">
                                                                                        <input class="form-check-input qty" id=@priorityQuantityId asp-for="OrderModel.orders[index].PriorityQuantity" type="Number" style="width:100px" value="@Model.OrderModel.orders[index].PriorityQuantity" onchange="QuantityValidation(@Model.OrderModel.orders[index].OrderQuantity, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, true, @Model.OrderModel.orders[index].PriorityQuantity, @Model.OrderModel.orders[index].PriorityId, @Model.HoldModel.QuotaQuantity)" />

                                                                                    </td>-->
                                                                                                                <td>
                                                                                                                    <select id="@radioButtonListId" name="OrderModel.orders[@index].PriorityId" asp-for="OrderModel.orders[index].PriorityId"
                                                                                                                            asp-items="@(new SelectList(Model.Priorities, "Id", "Name"))" onchange="QuantityValidation(@Model.OrderModel.orders[index].OrderQuantity, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, true, @Model.OrderModel.orders[index].PriorityQuantity, @Model.OrderModel.orders[index].PriorityId, @Model.holdTotalAssignedQuantity, @Model.HoldModel.ExtraQuantity)"></select>

                                                                                                                </td>
                                                                                                                                            <td style="width:300px">
                                                                                                                                                <input class="form-check-input qty" id=@priorityQuantityId asp-for="OrderModel.orders[index].PriorityQuantity" type="Number" style="width:100px" value="@Model.OrderModel.orders[index].PriorityQuantity" onchange="QuantityValidation(@Model.OrderModel.orders[index].OrderQuantity, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, true, @Model.OrderModel.orders[index].PriorityQuantity, @Model.OrderModel.orders[index].PriorityId, @Model.holdTotalAssignedQuantity, @Model.HoldModel.ExtraQuantity)" />
                                                                                                                                            </td>
                                                                                                                                                                        <td>
                                                                                                                                                                            <input class="form-check-input" asp-for="OrderModel.orders[index].Comment" type="text" style="width:100px" value="@Model.OrderModel.orders[index].Comment" />
                                                                                                                                                                        </td> }
                                                                                                                                                                                                else
                                                                                                                                                                                                {
                                                                                                                                                                        <td>
                                                                                                                                                                            <select id="@radioButtonListId" name="OrderModel.orders[@index].PriorityId" asp-for="OrderModel.orders[index].PriorityId"
                                                                                                                                                                                    asp-items="@(new SelectList(Model.Priorities, "Id", "Name"))" onchange="QuantityValidation(@Model.OrderModel.orders[index].OrderQuantity, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, false, 0,0, @Model.holdTotalAssignedQuantity, @Model.HoldModel.ExtraQuantity)"></select>

                                                                                                                                                                        </td>
                                                                                                                                                                                                    <td style="width:300px">
                                                                                                                                                                                                        <input class="form-check-input qty" id=@priorityQuantityId asp-for="OrderModel.orders[index].PriorityQuantity" type="Number" style="width:100px" value="@Model.OrderModel.orders[index].OrderQuantity" onchange="QuantityValidation(@Model.OrderModel.orders[index].OrderQuantity, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, false,0, 0,  @Model.holdTotalAssignedQuantity,@Model.HoldModel.ExtraQuantity)" />

                                                                                                                                                                                                    </td> @*<td style="width:200px">
                                                                                                                                                                                                                                        <div><input class="form-check-input" id=@radioButtonListId asp-for="OrderModel.orders[index].PriorityId" type="radio" value="2" disabled style="margin-left:40px" onchange="QuantityValidation(@Model.OrderModel.orders[index].OrderQuantity, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, false, 0, 2);" /><label style="margin-left:60px">No</label></div>
                                                                                                                                                                                                                                        <div><input class="form-check-input" id=@radioButtonListId asp-for="OrderModel.orders[index].PriorityId" type="radio" value="3" style="margin-left:40px" onchange="QuantityValidation(@Model.OrderModel.orders[index].OrderQuantity, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, false, 0, 2)" /><label style="margin-left:60px">Norm</label></div>
                                                                                                                                                                                                                                        <div><input class="form-check-input" id=@radioButtonListId asp-for="OrderModel.orders[index].PriorityId" type="radio" value="4" style="margin-left:40px" onchange="QuantityValidation(@Model.OrderModel.orders[index].OrderQuantity, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, false, 0, 2)" /><label style="margin-left:60px">Extra</label></div>
                                                                                                                                                                                                                                    </td>*@ @*<td style="width:300px">
                                                                                                                                                                                                            <input class="form-check-input qty" id=@priorityQuantityId asp-for="OrderModel.orders[index].PriorityQuantity" type="Number" style="width:100px" value="@Model.OrderModel.orders[index].OrderQuantity" onchange="QuantityValidation(@Model.OrderModel.orders[index].OrderQuantity, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, false, 0, 2, @Model.HoldModel.QuotaQuantity)" />

                                                                                                                                                                                                        </td>*@
                                                                                                                                                                                                                                                                <td>
                                                                                                                                                                                                                                                                    <input class="form-check-input" asp-for="OrderModel.orders[index].Comment" type="text" style="width:100px" value="@Model.OrderModel.orders[index].Comment" onchange="updateComment(@index)" />
                                                                                                                                                                                                                                                                </td>}
    <td style="width:150px">
        <input class="form-check-input" asp-for="OrderModel.orders[index].Truck" type="text" style="width:100px" value="@Model.OrderModel.orders[index].Truck" onchange="updateTruck(@index)" />
    </td>

    <input class="form-check-input" asp-for="OrderModel.orders[index].Submitted" type="hidden" />
    <input class="form-check-input" asp-for="OrderModel.orders[index].SavedBefore" type="hidden" />
    <input class="form-check-input" asp-for="HoldModel.PriorityDate" type="hidden" style="width:100px" />

    <input class="form-check-input" id="userId" asp-for="HoldModel.userId" type="hidden" style="width:100px" />
    <input class="form-check-input" asp-for="HoldModel.PriorityDate" type="hidden" style="width:100px" />

    <input class="form-check-input" asp-for="HoldModel.QuotaQuantity" type="hidden" style="width:100px" />
    <input id="calculatedRemainingQuantity" class="form-check-input" asp-for="HoldModel.ReminingQuantity" type="hidden" style="width:100px" />
    @Html.Hidden("test", Model.HoldModel.ReminingQuantity)
    <input type="hidden" asp-for="orderType" value=1 />

</tr> @*<input class="form-check-input" asp-for="OrderModel.holdModel.ReminingQuantity" type="hidden" style="width:100px" />*@ @*<input class="form-check-input" asp-for="OrderModel.holdModel.PriorityDate" type="hidden" style="width:100px" />
                            <input class="form-check-input" asp-for="OrderModel.holdModel.territoryId" type="hidden" style="width:100px" />
                            <input class="form-check-input" asp-for="OrderModel.holdModel.QuotaQuantity" type="hidden" style="width:100px" />




                            <input class="form-check-input" asp-for="HoldModel.PriorityDate" type="hidden" style="width:100px" />

                            <input class="form-check-input" asp-for="HoldModel.territoryId" type="hidden" style="width:100px" />

                            <input class="form-check-input" asp-for="HoldModel.QuotaQuantity" type="hidden" style="width:100px" />
                            <input id="calculatedRemainingQuantity" class="form-check-input" asp-for="HoldModel.ReminingQuantity" type="hidden" style="width:100px" />
                            @Html.Hidden("test", Model.HoldModel.ReminingQuantity)*@                    } }
                else
                {
<script>

    document.getElementById("NoQouta").hidden = false;

</script> }

            }
            else
            {
<script>

    document.getElementById("NOOrdersSpain").hidden = false;

</script>            }

            @if (Model.HoldModel != null)
            {
                float summation = Model.HoldModel.ExtraQuantity + Model.holdTotalAssignedQuantity;
<div>
    <span>Territory Qouta</span>
    <input id="Quota" type="number" disabled value="@Model.HoldModel.QuotaQuantity" style="margin:10px 20px 20px 0; width:90px" />
    <span>Remaining Quantity</span>
    <input id="remaining" type="number" disabled value="@Model.HoldModel.ReminingQuantity" style="margin:10px 20px 20px 0; width:90px" />
    <span> Total Assigned</span>
    <input id="total" type="number" value="@Model.holdTotalAssignedQuantity" disabled style="margin:10px 20px 20px 0; width:90px" />
    <span> Total extra</span>
    <input id="extra" type="number" value="@Model.HoldModel.ExtraQuantity" disabled style="margin:10px 20px 20px 0; width:90px" />
    <span>Summation</span>
    <input id="sum" type="number" value="@summation" disabled style="margin:10px 20px 20px 0; width:90px" />
</div>            }

        </tbody>
    </table>
    <span id="NOOrdersSpain" hidden>No search result</span>
    <span id="NoQouta" hidden>there is no Qouta for selected priority date</span>


    <div class="form-group" style="margin-top:20px">
        <input type="submit" value="Save" asp-action="SaveDeliveryOrders" class="btn btn-primary btn-lg searchbtn" style="margin:auto" />
    </div>
    @*<div class="form-group" style="margin-top:40px">
        <input type="submit" value="Submit" asp-action="SubmitOrders" class="btn btn-primary btn-lg searchbtn" style="margin:auto" />
    </div>*@
</form>


<script>
    function showNOOrdersSpain() {
        document.getElementById("NOOrdersSpain").visiable = true;
    }
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script src="~/filter/ddtf.js"></script>
<script>
    $('#example').ddTableFilter();
</script>
<script language="javascript">
    var today = new Date();
    var dd = String(today.getDate()).padStart(2, '0');
    var mm = String(today.getMonth() + 1).padStart(2, '0');
    var yyyy = today.getFullYear();

    today = yyyy + '-' + mm + '-' + dd;
    $('#SelectedPriorityDate').attr('min', today);
</script>